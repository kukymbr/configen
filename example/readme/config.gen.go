// Package readme contains configuration read-only provider.
//
// Code generated by github.com/kukymbr/configen; DO NOT EDIT.
// Generator version: unknown (revision unknown, built at 2025-10-04 00:00:00)
package readme

import ()

type APIConfig struct {
	host string
	port int

	origin any
}

func (c APIConfig) Host() string {
	return c.host
}

func (c APIConfig) Port() int {
	return c.port
}

// NewAPIConfig is a constructor converting apiConfig into the APIConfig.
func NewAPIConfig(dto apiConfig) APIConfig {
	return APIConfig{
		host: dto.Host,
		port: dto.Port,

		origin: dto,
	}
}

type AppConfig struct {
	env       string
	namespace string
	domain    string

	origin any
}

func (c AppConfig) Env() string {
	return c.env
}

func (c AppConfig) Namespace() string {
	return c.namespace
}

func (c AppConfig) Domain() string {
	return c.domain
}

// NewAppConfig is a constructor converting appConfig into the AppConfig.
func NewAppConfig(dto appConfig) AppConfig {
	return AppConfig{
		env:       dto.Env,
		namespace: dto.Namespace,
		domain:    dto.Domain,

		origin: dto,
	}
}

type Config struct {
	app    AppConfig
	logger LoggerConfig
	api    APIConfig

	origin any
}

// App is an application common settings.
func (c Config) App() AppConfig {
	return c.app
}

// Logger is a logging setup values.
func (c Config) Logger() LoggerConfig {
	return c.logger
}

// API is an API server configuration.
func (c Config) API() APIConfig {
	return c.api
}

// NewConfig is a constructor converting config into the Config.
func NewConfig(dto config) Config {
	return Config{
		app:    NewAppConfig(dto.App),
		logger: NewLoggerConfig(dto.Logger),
		api:    NewAPIConfig(dto.API),

		origin: dto,
	}
}

type LoggerConfig struct {
	level string

	origin any
}

func (c LoggerConfig) Level() string {
	return c.level
}

// NewLoggerConfig is a constructor converting loggerConfig into the LoggerConfig.
func NewLoggerConfig(dto loggerConfig) LoggerConfig {
	return LoggerConfig{
		level: dto.Level,

		origin: dto,
	}
}
