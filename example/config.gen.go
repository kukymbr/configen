// Code generated by github.com/kukymbr/configen; DO NOT EDIT.
// Generator version: unknown (revision unknown, built at 2025-10-04 00:00:00)
package example

import (
	"time"
)

type ApiConfig struct {
	host   string
	port   int
	secret string
	reqTtl time.Duration
}

func (c ApiConfig) Host() string {
	return c.host
}

func (c ApiConfig) Port() int {
	return c.port
}

func (c ApiConfig) Secret() string {
	return c.secret
}

func (c ApiConfig) ReqTTL() time.Duration {
	return c.reqTtl
}

// Constructor for ApiConfig.
func NewApiConfig(dto apiConfig) ApiConfig {
	return ApiConfig{
		host:   dto.Host,
		port:   dto.Port,
		secret: dto.Secret,
		reqTtl: dto.ReqTTL,
	}
}

type AppConfig struct {
	env       string
	namespace string
	domain    string
}

// Application environment mode: development|production
func (c AppConfig) Env() string {
	return c.env
}

// Environment namespace (e.g. "dev1")
func (c AppConfig) Namespace() string {
	return c.namespace
}

// Top-level domain for the cookies
func (c AppConfig) Domain() string {
	return c.domain
}

// Constructor for AppConfig.
func NewAppConfig(dto appConfig) AppConfig {
	return AppConfig{
		env:       dto.Env,
		namespace: dto.Namespace,
		domain:    dto.Domain,
	}
}

type Config struct {
	app    AppConfig
	logger LoggerConfig
	api    ApiConfig
}

// App is an application common settings.
func (c Config) App() AppConfig {
	return c.app
}

// Logger is a logging setup values.
func (c Config) Logger() LoggerConfig {
	return c.logger
}

// API is an API server configuration.
func (c Config) API() ApiConfig {
	return c.api
}

// Constructor for Config.
func NewConfig(dto config) Config {
	return Config{
		app:    NewAppConfig(dto.App),
		logger: NewLoggerConfig(dto.Logger),
		api:    NewApiConfig(dto.API),
	}
}

type LoggerConfig struct {
	level LogLevel
}

func (c LoggerConfig) Level() LogLevel {
	return c.level
}

// Constructor for LoggerConfig.
func NewLoggerConfig(dto loggerConfig) LoggerConfig {
	return LoggerConfig{
		level: dto.Level,
	}
}
